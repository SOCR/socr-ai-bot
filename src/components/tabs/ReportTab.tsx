
import React, { useState } from 'react';
import { Card, CardContent, CardHeader, CardTitle } from '@/components/ui/card';
import { Button } from '@/components/ui/button';
import { Checkbox } from '@/components/ui/checkbox';
import { Label } from '@/components/ui/label';
import CodeBlock from '../CodeBlock';
import { Download } from 'lucide-react';

interface CodeChunk {
  id: string;
  title: string;
  code: string;
  output?: string;
  plot?: string;
}

const ReportTab: React.FC = () => {
  // Example code chunks
  const [codeChunks] = useState<CodeChunk[]>([
    {
      id: 'chunk-1',
      title: 'Data Summary',
      code: 'summary(df)',
      output: 'Output of summary statistics...'
    },
    {
      id: 'chunk-2',
      title: 'Data Visualization',
      code: 'ggplot(df, aes(x = factor(cyl), y = mpg)) +\n  geom_boxplot()',
      plot: 'https://mdn.github.io/dom-examples/canvas/pixel-manipulation/bicycle.png'
    },
    {
      id: 'chunk-3',
      title: 'Linear Regression',
      code: 'model <- lm(mpg ~ wt + hp, data = df)\nsummary(model)',
      output: 'Regression model summary output...'
    }
  ]);
  
  const [selectedChunks, setSelectedChunks] = useState<string[]>(['chunk-1', 'chunk-2']);

  const handleChunkToggle = (chunkId: string) => {
    setSelectedChunks(prev => 
      prev.includes(chunkId)
        ? prev.filter(id => id !== chunkId)
        : [...prev, chunkId]
    );
  };

  const downloadRMarkdown = () => {
    const selectedCodeChunks = codeChunks.filter(chunk => 
      selectedChunks.includes(chunk.id)
    );
    
    let rmdContent = `---
title: "SOCR AI Bot Report"
author: "Generated by SOCR AI Bot"
date: "${new Date().toLocaleDateString()}"
output: html_document
---

\`\`\`{r setup, include=FALSE}
knitr::opts_chunk$set(echo = TRUE)
\`\`\`

## Data Analysis Report

This report was automatically generated by the SOCR AI Bot.

`;

    selectedCodeChunks.forEach(chunk => {
      rmdContent += `### ${chunk.title}\n\n\`\`\`{r}\n${chunk.code}\n\`\`\`\n\n`;
      if (chunk.output) {
        rmdContent += `Output:\n\n\`\`\`\n${chunk.output}\n\`\`\`\n\n`;
      }
      if (chunk.plot) {
        rmdContent += `*Plot output is displayed in the R environment*\n\n`;
      }
    });
    
    const blob = new Blob([rmdContent], { type: 'text/plain' });
    const url = URL.createObjectURL(blob);
    const a = document.createElement('a');
    a.href = url;
    a.download = 'socr_ai_bot_report.Rmd';
    document.body.appendChild(a);
    a.click();
    document.body.removeChild(a);
    URL.revokeObjectURL(url);
  };

  return (
    <div className="container mx-auto py-6">
      <div className="max-w-3xl mx-auto">
        <Card className="mb-6">
          <CardHeader>
            <CardTitle className="text-lg">Generate Report</CardTitle>
          </CardHeader>
          <CardContent>
            <div className="space-y-4">
              <div>
                <h3 className="text-sm font-medium mb-2">Select code chunks to include:</h3>
                <div className="space-y-2">
                  {codeChunks.map(chunk => (
                    <div key={chunk.id} className="flex items-center space-x-2">
                      <Checkbox 
                        id={chunk.id}
                        checked={selectedChunks.includes(chunk.id)}
                        onCheckedChange={() => handleChunkToggle(chunk.id)}
                      />
                      <Label htmlFor={chunk.id}>{chunk.title}</Label>
                    </div>
                  ))}
                </div>
              </div>
              
              <div className="flex justify-between items-center pt-4 border-t">
                <Button variant="outline">Preview HTML</Button>
                <Button onClick={downloadRMarkdown}>
                  <Download className="mr-2 h-4 w-4" />
                  Download RMarkdown
                </Button>
              </div>
            </div>
          </CardContent>
        </Card>
        
        <Card>
          <CardHeader>
            <CardTitle className="text-lg">RMarkdown Preview</CardTitle>
          </CardHeader>
          <CardContent>
            <CodeBlock 
              code={`---
title: "SOCR AI Bot Report"
author: "Generated by SOCR AI Bot"
date: "${new Date().toLocaleDateString()}"
output: html_document
---

\`\`\`{r setup, include=FALSE}
knitr::opts_chunk$set(echo = TRUE)
\`\`\`

## Data Analysis Report

This report was automatically generated by the SOCR AI Bot.

${codeChunks
  .filter(chunk => selectedChunks.includes(chunk.id))
  .map(chunk => `### ${chunk.title}

\`\`\`{r}
${chunk.code}
\`\`\`
`).join('\n\n')}`}
              language="markdown"
            />
          </CardContent>
        </Card>
      </div>
    </div>
  );
};

export default ReportTab;
